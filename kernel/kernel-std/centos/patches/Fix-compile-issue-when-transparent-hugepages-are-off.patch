From e5e57e53c3fab5de7b6cb314d932be5edba27af6 Mon Sep 17 00:00:00 2001
Message-Id: <e5e57e53c3fab5de7b6cb314d932be5edba27af6.1593547666.git.Jim.Somerville@windriver.com>
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Thu, 15 Dec 2016 14:27:48 -0500
Subject: [PATCH 01/30] Fix compile issue when transparent hugepages are off

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
Signed-off-by: Robin Lu <bin1.lu@intel.com>
---
 fs/proc/task_mmu.c | 2 ++
 mm/swap.c          | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c
index e27a1d4..e8a8ba9 100644
--- a/fs/proc/task_mmu.c
+++ b/fs/proc/task_mmu.c
@@ -1116,7 +1116,9 @@ static int pagemap_pmd_range(pmd_t *pmdp, unsigned long addr, unsigned long end,
 {
 	struct vm_area_struct *vma;
 	struct pagemapread *pm = walk->private;
+#ifdef CONFIG_TRANSPARENT_HUGEPAGE
 	spinlock_t *ptl;
+#endif
 	pte_t *pte;
 	int err = 0;
 
diff --git a/mm/swap.c b/mm/swap.c
index 25c2657..83cbbca 100644
--- a/mm/swap.c
+++ b/mm/swap.c
@@ -1043,8 +1043,10 @@ void release_pages(struct page **pages, int nr, bool cold)
 		if (!put_page_testzero(page))
 			continue;
 
+#ifdef CONFIG_TRANSPARENT_HUGEPAGE
 		VM_BUG_ON_PAGE(check_mmu_gather &&
 			       trans_huge_mmu_gather_count(page), page);
+#endif
 
 		if (PageLRU(page)) {
 			if (!was_thp)
-- 
1.8.3.1

